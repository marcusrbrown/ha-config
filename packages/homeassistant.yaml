---
homeassistant:
  customize:
    alert.available_updates:
      icon: mdi:cloud-upload
      category: hass
    alert.github_connected:
      #      entity_picture: !secret GITHUB_ICON
      category: hass
    alert.low_battery:
      icon: mdi:battery-alert
      category: hass
    alert.unavailable_entities:
      icon: mdi:alert-circle
      category: hass
    alert.unknown_browsers:
      icon: mdi:monitor-dashboard
      category: hass
      tts_repeat: true
      tts_timeout: 15
      quiet_play: true
      save_message: true

alert:
  github_connected:
    name: GitHub Connected
    entity_id: binary_sensor.github_connected_alert
    state: 'on'
    notifiers: log
    skip_first: true
    repeat: 999999
    data:
      tag: github_connected

  low_battery:
    name: 'Low Battery'
    title: 'Low Battery'
    message: |
      {%- set entities = expand('group.low_batteries') -%}
      {%- for item in entities -%}
      {{- item.name | lower | replace(' battery level', '') | replace(': battery level', '') | title }} - {{ item.state_with_unit }}
      {%- if not loop.last %}<br/>{% endif -%}
      {%- endfor -%}
    done_message: clear_notification
    entity_id: binary_sensor.low_battery_alert
    state: 'on'
    repeat: 1440
    # notifiers: marcus
    data:
      tag: low_battery
      group: System
      channel: Alert
      visibility: public
      notification_icon: mdi:battery-alert
      # icon_url: !secret BATTERY_ICON
      # ledColor: !secret WARNING_COLOR
      # color: !secret WARNING_COLOR
      # vibrationPattern: !secret ALERT_VIBRATION
      # clickAction: /ui-hass/hass
      actions:
        - title: 'Pause'
          action: pause_alert_low_battery

  unavailable_entities:
    name: Unavailable Entities
    entity_id: binary_sensor.unavailable_entities_alert
    state: 'on'
    notifiers: log
    skip_first: false
    repeat: 999999
    data:
      tag: unavailable_entities

  unknown_devices:
    name: Unknown Devices
    entity_id: binary_sensor.unknown_device_alert
    state: 'on'
    notifiers: log
    skip_first: false
    repeat: 999999
    data:
      tag: unknown_devices

group:
  ignored_unavailable_entities:
    entities: !include ../include/ignored_entities.yaml

  integration_connected_sensors:
    all: true
    entities:
      - binary_sensor.github_connected

input_boolean:
  hass_alerts:
    name: 'Home Assistant Alerts'
    icon: mdi:alert
  startup_pending:
    name: 'Startup Pending'
    icon: mdi:restart-alert
    initial: true

input_number:
  battery_alert_threshold:
    name: Battery Alert Threshold
    icon: mdi:battery-alert
    initial: 10
    max: 100
    min: 0

sensor:
  # https://www.home-assistant.io/integrations/websocket_api/
  - platform: websocket_api

  - platform: time_date
    display_options:
      - time
      - date
      - date_time

template:
  - sensor:
      - name: Unknown Devices
        unique_id: unknown_devices
        icon: mdi:devices
        state: >
          {{ state_attr(this.entity_id, 'entity_id') | count
            if state_attr(this.entity_id, 'entity_id') != none else 'None'
          }}
        attributes:
          entity_id: >
            {{ states.device_tracker
                | rejectattr('attributes.device_type', 'in', ['bluetooth', 'bluetooth_le', 'location', 'wired', 'wireless'])
                | map(attribute='entity_id') | select('has_value') | list | sort
            }}
