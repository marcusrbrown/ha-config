---
homeassistant:
  customize:
    alert.zwave_network:
      icon: mdi:z-wave
      category: hass
    alert.zwave_device:
      icon: mdi:z-wave
      category: hass

alert:
  zwave_network:
    name: "ZWave Network"
    title: "ZWave Network Offline"
    message: "The Z-Wave network is offline."
    done_message: clear_notification
    entity_id: binary_sensor.zwave_network_alert
    state: "on"
    repeat: 60
    # notifiers: marcus
    data:
      tag: zwave_network
      group: Alert
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      visibility: public
      notification_icon: mdi:z-wave
      # icon_url: !secret ZWAVE_ICON
      # ledColor: !secret SEVERE_COLOR
      # color: !secret SEVERE_COLOR
      # vibrationPattern: !secret ALERT_VIBRATION
      actions:
        - title: "Pause"
          action: pause_alert_zwave_network

        - title: "Restart"
          action: restart_zwave_network

        - title: "Reboot"
          action: reboot_router

  zwave_device:
    name: "ZWave Device"
    title: "ZWave Device Offline"
    message: |
      {%- set sensors = expand(state_attr('binary_sensor.offline_zwave_devices', 'entity_id')) %}
      {%- for item in sensors %}
        {%- if item.name is defined %}
          {%- if not loop.first -%}<br/>{%- endif %}
          {{- item.name | replace(': Ping','') | title }}
        {%- else %} Unknown Device
        {%- endif %}
      {%- endfor %}
    done_message: clear_notification
    entity_id: binary_sensor.zwave_device_alert
    state: "on"
    repeat: 60
    # notifiers: marcus
    data:
      tag: zwave_device
      group: Alert
      channel: Alert
      importance: max
      ttl: 0
      priority: high
      visibility: public
      notification_icon: mdi:z-wave
      # icon_url: !secret ZWAVE_ICON
      # ledColor: !secret SEVERE_COLOR
      # color: !secret SEVERE_COLOR
      # vibrationPattern: !secret ALERT_VIBRATION
      actions:
        - title: "Pause"
          action: pause_alert_zwave_device

        - title: "Ping Devices"
          action: ping_offline_zwave_devices

template:
  - trigger:
      - platform: homeassistant
        event: start

      - platform: event
        event_type: event_template_reloaded

      - platform: state
        entity_id: sensor.time
    binary_sensor:
      - name: "ZWave Network"
        unique_id: zwave_network
        icon: mdi:z-wave
        device_class: connectivity
        state: >
          {{ (is_state('binary_sensor.z_wave_js_running', 'on')
                or is_state('binary_sensor.z_wave_js_to_mqtt_running', 'on'))
              and integration_entities('zwave_js') | select('has_value') | list | count > 0
          }}

  - binary_sensor:
      - name: "Offline ZWave Devices"
        unique_id: offline_zwave_devices
        icon: mdi:z-wave
        device_class: problem
        state: >
          {% set entities = state_attr(this.entity_id,'entity_id') %}
          {{ false if entities == none else entities|count > 0 }}
        attributes:
          entity_id: >
            {{ expand(integration_entities('zwave_js'))
                | selectattr('entity_id', 'search', 'node_status')
                | selectattr('state', 'in', ['dead', 'unavailable', 'unknown'])
                | map(attribute="object_id")
                | map('regex_replace', find='(.*)_node_status', replace='button.\\1_ping', ignorecase=False)
                | list | sort
            }}

  - sensor:
      - name: "ZWave Status"
        unique_id: zwave_status
        icon: mdi:z-wave
        state: >
          {% if is_state('binary_sensor.zwave_network', 'off') %} critical
          {% else %} {{ iif(is_state('binary_sensor.offline_zwave_devices', 'on'), 'warning', 'ok') }}
          {% endif %}
